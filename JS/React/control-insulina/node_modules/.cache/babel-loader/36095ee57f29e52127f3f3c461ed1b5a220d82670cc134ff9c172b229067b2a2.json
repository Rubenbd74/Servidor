{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Servidor\\\\JS\\\\React\\\\control-insulina\\\\src\\\\Components\\\\UserForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { ValidationContext } from \"../Components/ValidationContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = ({\n  refreshUsers\n}) => {\n  _s();\n  const {\n    reg,\n    validateAge\n  } = useContext(ValidationContext); // Desestructuramos reg y validateAge\n  const [formData, setFormData] = useState({\n    usuario: \"\",\n    contra: \"\",\n    nombre: \"\",\n    apellidos: \"\",\n    fecha_nacimiento: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validación de los datos usando el reg y validateAge\n    if (!reg.usuario.test(formData.usuario)) {\n      setError(\"El nombre de usuario no es válido.\");\n      return;\n    }\n    if (!reg.contra.test(formData.contra)) {\n      setError(\"La contraseña debe tener al menos 8 caracteres, incluir una letra mayúscula y un número.\");\n      return;\n    }\n    const age = validateAge(formData.fecha_nacimiento);\n    if (age < 18) {\n      setError(\"Debes tener al menos 18 años.\");\n      return;\n    }\n    const newData = {\n      usuario: formData.usuario,\n      contra: formData.contra,\n      nombre: formData.nombre,\n      apellidos: formData.apellidos,\n      fecha_nacimiento: formData.fecha_nacimiento\n    };\n    console.log(\"Datos enviados:\", newData);\n    const response = await fetch(\"http://localhost:8080/Servidor/JS/React/control-insulina/api/Users.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newData)\n    });\n    const data = await response.json();\n    console.log(\"Respuesta del servidor:\", data);\n    if (data.error) {\n      setError(data.error);\n      return;\n    }\n    refreshUsers();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"usuario\",\n      placeholder: \"Usuario\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"contra\",\n      placeholder: \"Contrase\\xF1a\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"nombre\",\n      placeholder: \"Nombre\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"apellidos\",\n      placeholder: \"Apellidos\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"fecha_nacimiento\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Agregar Usuario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"msKKrZQfnIz1w2UCYHjGZOfq0SY=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["useState","useContext","ValidationContext","jsxDEV","_jsxDEV","UserForm","refreshUsers","_s","reg","validateAge","formData","setFormData","usuario","contra","nombre","apellidos","fecha_nacimiento","error","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","test","age","newData","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","onSubmit","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Servidor/JS/React/control-insulina/src/Components/UserForm.js"],"sourcesContent":["import { useState, useContext } from \"react\";\r\nimport { ValidationContext } from \"../Components/ValidationContext\";\r\n\r\nconst UserForm = ({ refreshUsers }) => {\r\n  const { reg, validateAge } = useContext(ValidationContext); // Desestructuramos reg y validateAge\r\n  const [formData, setFormData] = useState({\r\n    usuario: \"\",\r\n    contra: \"\",\r\n    nombre: \"\",\r\n    apellidos: \"\",\r\n    fecha_nacimiento: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validación de los datos usando el reg y validateAge\r\n    if (!reg.usuario.test(formData.usuario)) {\r\n      setError(\"El nombre de usuario no es válido.\");\r\n      return;\r\n    }\r\n\r\n    if (!reg.contra.test(formData.contra)) {\r\n      setError(\"La contraseña debe tener al menos 8 caracteres, incluir una letra mayúscula y un número.\");\r\n      return;\r\n    }\r\n\r\n    const age = validateAge(formData.fecha_nacimiento);\r\n    if (age < 18) {\r\n      setError(\"Debes tener al menos 18 años.\");\r\n      return;\r\n    }\r\n\r\n    const newData = {\r\n      usuario: formData.usuario,\r\n      contra: formData.contra,\r\n      nombre: formData.nombre,\r\n      apellidos: formData.apellidos,\r\n      fecha_nacimiento: formData.fecha_nacimiento,\r\n    };\r\n\r\n    console.log(\"Datos enviados:\", newData);\r\n\r\n    const response = await fetch(\"http://localhost:8080/Servidor/JS/React/control-insulina/api/Users.php\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(newData),\r\n    });\r\n\r\n    const data = await response.json();\r\n    console.log(\"Respuesta del servidor:\", data);\r\n\r\n    if (data.error) {\r\n      setError(data.error);\r\n      return;\r\n    }\r\n\r\n    refreshUsers();\r\n  };\r\n\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" name=\"usuario\" placeholder=\"Usuario\" onChange={handleChange} required />\r\n      <input type=\"password\" name=\"contra\" placeholder=\"Contraseña\" onChange={handleChange} required />\r\n      <input type=\"text\" name=\"nombre\" placeholder=\"Nombre\" onChange={handleChange} required />\r\n      <input type=\"text\" name=\"apellidos\" placeholder=\"Apellidos\" onChange={handleChange} required />\r\n      <input type=\"date\" name=\"fecha_nacimiento\" onChange={handleChange} required />\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <button type=\"submit\">Agregar Usuario</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}