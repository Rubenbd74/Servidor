{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Servidor\\\\JS\\\\React\\\\control-insulina\\\\src\\\\Components\\\\UserForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { ValidationContext } from \"../Components/ValidationContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = ({\n  refreshUsers\n}) => {\n  _s();\n  const {\n    reg,\n    validateAge\n  } = useContext(ValidationContext);\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    name: \"\",\n    lastname: \"\",\n    birthdate: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const age = validateAge(formData.birthdate);\n    if (age < 18) {\n      setError(\"Debes tener al menos 18 años para registrarte.\");\n      return;\n    }\n    if (!reg.username.test(formData.username)) {\n      setError(\"El nombre de usuario debe empezar con una letra y tener al menos 6 caracteres.\");\n      return;\n    }\n    if (!reg.password.test(formData.password)) {\n      setError(\"La contraseña debe tener al menos 8 caracteres, una mayúscula y un número.\");\n      return;\n    }\n    setError(\"\");\n    try {\n      const response = await fetch(\"http://localhost:8080/Servidor/JS/React/control-insulina/api/Users.php\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Error al enviar la solicitud.\");\n      }\n      refreshUsers();\n    } catch (error) {\n      console.error(\"Error en el formulario:\", error);\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Usuario\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Contrase\\xF1a\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Nombre\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"lastname\",\n      placeholder: \"Apellidos\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"birthdate\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Agregar Usuario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"ega63/LD1cZoJtcSwyZmUHexMMo=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["useState","useContext","ValidationContext","jsxDEV","_jsxDEV","UserForm","refreshUsers","_s","reg","validateAge","formData","setFormData","username","password","name","lastname","birthdate","error","setError","handleChange","e","target","value","handleSubmit","preventDefault","age","test","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","console","message","onSubmit","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Servidor/JS/React/control-insulina/src/Components/UserForm.js"],"sourcesContent":["import { useState, useContext } from \"react\";\r\nimport { ValidationContext } from \"../Components/ValidationContext\";\r\n\r\nconst UserForm = ({ refreshUsers }) => {\r\n  const { reg, validateAge } = useContext(ValidationContext);\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    lastname: \"\",\r\n    birthdate: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const age = validateAge(formData.birthdate);\r\n  \r\n    if (age < 18) {\r\n      setError(\"Debes tener al menos 18 años para registrarte.\");\r\n      return;\r\n    }\r\n  \r\n    if (!reg.username.test(formData.username)) {\r\n      setError(\"El nombre de usuario debe empezar con una letra y tener al menos 6 caracteres.\");\r\n      return;\r\n    }\r\n  \r\n    if (!reg.password.test(formData.password)) {\r\n      setError(\"La contraseña debe tener al menos 8 caracteres, una mayúscula y un número.\");\r\n      return;\r\n    }\r\n  \r\n    setError(\"\");\r\n    \r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/Servidor/JS/React/control-insulina/api/Users.php\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Error al enviar la solicitud.\");\r\n      }\r\n  \r\n      refreshUsers();\r\n    } catch (error) {\r\n      console.error(\"Error en el formulario:\", error);\r\n      setError(error.message);\r\n    }\r\n  };  \r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" name=\"username\" placeholder=\"Usuario\" onChange={handleChange} required />\r\n      <input type=\"password\" name=\"password\" placeholder=\"Contraseña\" onChange={handleChange} required />\r\n      <input type=\"text\" name=\"name\" placeholder=\"Nombre\" onChange={handleChange} required />\r\n      <input type=\"text\" name=\"lastname\" placeholder=\"Apellidos\" onChange={handleChange} required />\r\n      <input type=\"date\" name=\"birthdate\" onChange={handleChange} required />\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <button type=\"submit\">Agregar Usuario</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}