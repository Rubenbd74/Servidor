{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Servidor\\\\JS\\\\React\\\\control-insulina\\\\src\\\\Components\\\\ValidationContext.js\";\nimport React, { createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ValidationContext = /*#__PURE__*/createContext();\nexport const ValidationProvider = ({\n  children\n}) => {\n  const reg = {\n    username: /^[a-z][a-z0-9]{5,}$/,\n    password: /^(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,}$/\n  };\n  const validateAge = birthdate => {\n    const birthDate = new Date(birthdate);\n    const today = new Date();\n    const age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    const dayDiff = today.getDate() - birthDate.getDate();\n\n    // Restar 1 si el cumpleaños aún no ha ocurrido en este año\n    if (monthDiff < 0 || monthDiff === 0 && dayDiff < 0) {\n      return age - 1;\n    }\n    return age;\n  };\n  return /*#__PURE__*/_jsxDEV(ValidationContext.Provider, {\n    value: {\n      regex,\n      validateAge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = ValidationProvider;\nvar _c;\n$RefreshReg$(_c, \"ValidationProvider\");","map":{"version":3,"names":["React","createContext","jsxDEV","_jsxDEV","ValidationContext","ValidationProvider","children","reg","username","password","validateAge","birthdate","birthDate","Date","today","age","getFullYear","monthDiff","getMonth","dayDiff","getDate","Provider","value","regex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Servidor/JS/React/control-insulina/src/Components/ValidationContext.js"],"sourcesContent":["import React, { createContext } from 'react';\r\n\r\nexport const ValidationContext = createContext();\r\n\r\nexport const ValidationProvider = ({ children }) => {\r\n  const reg = {\r\n    username: /^[a-z][a-z0-9]{5,}$/,\r\n    password: /^(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\r\n  };\r\n\r\n  const validateAge = (birthdate) => {\r\n    const birthDate = new Date(birthdate);\r\n    const today = new Date();\r\n    const age = today.getFullYear() - birthDate.getFullYear();\r\n    const monthDiff = today.getMonth() - birthDate.getMonth();\r\n    const dayDiff = today.getDate() - birthDate.getDate();\r\n\r\n    // Restar 1 si el cumpleaños aún no ha ocurrido en este año\r\n    if (monthDiff < 0 || (monthDiff === 0 && dayDiff < 0)) {\r\n      return age - 1;\r\n    }\r\n    return age;\r\n  };\r\n\r\n  return (\r\n    <ValidationContext.Provider value={{ regex, validateAge }}>\r\n      {children}\r\n    </ValidationContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,OAAO,MAAMC,iBAAiB,gBAAGH,aAAa,CAAC,CAAC;AAEhD,OAAO,MAAMI,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAClD,MAAMC,GAAG,GAAG;IACVC,QAAQ,EAAE,qBAAqB;IAC/BC,QAAQ,EAAE;EACZ,CAAC;EAED,MAAMC,WAAW,GAAIC,SAAS,IAAK;IACjC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;IACrC,MAAMG,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;IACxB,MAAME,GAAG,GAAGD,KAAK,CAACE,WAAW,CAAC,CAAC,GAAGJ,SAAS,CAACI,WAAW,CAAC,CAAC;IACzD,MAAMC,SAAS,GAAGH,KAAK,CAACI,QAAQ,CAAC,CAAC,GAAGN,SAAS,CAACM,QAAQ,CAAC,CAAC;IACzD,MAAMC,OAAO,GAAGL,KAAK,CAACM,OAAO,CAAC,CAAC,GAAGR,SAAS,CAACQ,OAAO,CAAC,CAAC;;IAErD;IACA,IAAIH,SAAS,GAAG,CAAC,IAAKA,SAAS,KAAK,CAAC,IAAIE,OAAO,GAAG,CAAE,EAAE;MACrD,OAAOJ,GAAG,GAAG,CAAC;IAChB;IACA,OAAOA,GAAG;EACZ,CAAC;EAED,oBACEZ,OAAA,CAACC,iBAAiB,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEC,KAAK;MAAEb;IAAY,CAAE;IAAAJ,QAAA,EACvDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;AAACC,EAAA,GAzBWvB,kBAAkB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}