{"ast":null,"code":"export const fetchUsers = async () => {\n  const res = await fetch(\"http://localhost/api/get_users.php\");\n  return await res.json();\n};\nexport const fetchStats = async () => {\n  try {\n    const res = await fetch(\"http://localhost/api/get_stats.php\");\n    if (!res.ok) {\n      throw new Error(`Error fetching stats: ${res.status}`);\n    }\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const addUser = async user => {\n  try {\n    const res = await fetch(\"http://localhost/api/get_users.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    if (!res.ok) {\n      throw new Error(`Error adding user: ${res.status}`);\n    }\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};","map":{"version":3,"names":["fetchUsers","res","fetch","json","fetchStats","ok","Error","status","data","error","console","addUser","user","method","headers","body","JSON","stringify"],"sources":["C:/xampp/htdocs/Servidor/JS/React/control-insulina/src/Services/api.js"],"sourcesContent":["export const fetchUsers = async () => {\r\n  const res = await fetch(\"http://localhost/api/get_users.php\");\r\n  return await res.json();\r\n};\r\n\r\nexport const fetchStats = async () => {\r\n  try {\r\n    const res = await fetch(\"http://localhost/api/get_stats.php\");\r\n    if (!res.ok) {\r\n      throw new Error(`Error fetching stats: ${res.status}`);\r\n    }\r\n    const data = await res.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addUser = async (user) => {\r\n  try {\r\n    const res = await fetch(\"http://localhost/api/get_users.php\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n    if (!res.ok) {\r\n      throw new Error(`Error adding user: ${res.status}`);\r\n    }\r\n    const data = await res.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;EAC7D,OAAO,MAAMD,GAAG,CAACE,IAAI,CAAC,CAAC;AACzB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMH,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;IAC7D,IAAI,CAACD,GAAG,CAACI,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,yBAAyBL,GAAG,CAACM,MAAM,EAAE,CAAC;IACxD;IACA,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACE,IAAI,CAAC,CAAC;IAC7B,OAAOK,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,OAAO,GAAG,MAAOC,IAAI,IAAK;EACrC,IAAI;IACF,MAAMX,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MAC5DW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC;IACF,IAAI,CAACX,GAAG,CAACI,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,sBAAsBL,GAAG,CAACM,MAAM,EAAE,CAAC;IACrD;IACA,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACE,IAAI,CAAC,CAAC;IAC7B,OAAOK,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}